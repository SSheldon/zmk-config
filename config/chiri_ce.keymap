#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tog_on: behavior_tog_on {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            toggle-mode = "on";
        };
        tog_off: behavior_tog_off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            toggle-mode = "off";
        };

        // Enables the Command layer while held
        cmdt: cmdt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            bindings = <&macro_command_hold>, <&kp>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
        };

        // Sticky mod tap; only sticky on tap so that mods can be held for mouse without persisting after clicks
        smt: smt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&kp>, <&sk>;
            flavor = "tap-preferred";
            hold-while-undecided;
            hold-while-undecided-linger;
        };
    };
};

#define SMT(x) &smt x x

/ {
    macros {
        // Enables the Command layer while a modifier is held
        macro_command_hold: macro_command_hold {
            label = "&MACRO_COMMAND_HOLD";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            wait-ms = <0>;
            bindings = <&macro_press>
                , <&macro_param_1to1>
                , <&kp MACRO_PLACEHOLDER>
                , <&mo 1>
                , <&macro_pause_for_release>
                , <&macro_release>
                , <&macro_param_1to1>
                , <&kp MACRO_PLACEHOLDER>
                , <&mo 1>
                , <&macro_tap>
                , <&tog_off 6>;
        };

        // Begins app switching, enabling the AppSwitch layer
        macro_app_switch_start: macro_app_switch_start {
            label = "&MACRO_APP_SWITCH_START";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&tog_on 6>
                , <&kp TAB>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        // Begins app switching
        combo_combo_app_switch {
            timeout-ms = <75>;
            key-positions = <14 15>;
            bindings = <&macro_app_switch_start>;
            layers = <1>;
        };

        // Enables the number layer while held
        combo_combo_num {
            timeout-ms = <75>;
            key-positions = <40 41>;
            bindings = <&mo 2>;
            layers = <0>;
            slow-release;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_Base {
            bindings = <
  &kp EQUAL  &kp X  &kp C  &kp L  &kp D  &kp K                                    &kp Z          &kp Y    &kp O    &kp U      &kp Q  &kp BSLH
  &kp MINUS  &kp R  &kp S  &kp T  &kp H  &kp F                                    &kp P          &kp N    &kp E    &kp I      &kp A  &kp FSLH
  &kp GRAVE  &kp W  &kp V  &kp G  &kp M  &kp J              &kp LGUI   &kp RALT   &kp BSPC       &kp B  &kp SQT  &kp DOT  &kp COMMA  &kp SEMI
                                  &mo 2  &cmdt LCTRL SPACE  &lt 5 ESC  &lt 3 TAB  &mt RSHFT RET  &mo 4
            >;
        };

        layer_Command {
            bindings = <
  &trans  &kp Q   &kp W  &trans  &trans  &trans                   &trans  &trans    &trans    &trans  &trans  &trans
  &trans  &kp A  &trans  &trans   &kp R  &trans                   &trans  &trans    &trans    &trans  &trans  &trans
  &trans  &kp Z   &kp X   &kp C   &kp V   &kp G   &none  &trans   &trans  &trans    &trans    &trans  &trans  &trans
                                  &none  &tog 1   &none  &kp TAB  &trans   &none
            >;
        };

        layer_Number {
            bindings = <
  &none  &kp TILDE     &kp AT  &kp HASH   &kp DLLR  &kp PRCNT                  &kp CARET  &kp N7     &kp N8   &kp N9  &kp COLON  &none
  &none   &kp EXCL  &kp EQUAL  &kp STAR  &kp MINUS   &kp PLUS                     &kp N0  &kp N4     &kp N5   &kp N6    &kp DOT  &none
  &none  &kp GRAVE   &kp LPAR  &kp RPAR   &kp FSLH   &kp BSLH   &none    &none    &trans  &kp N1     &kp N2   &kp N3  &kp COMMA  &none
                                             &none  &kp SPACE   &trans  &trans   &kp RET   &none
            >;
        };

        layer_Symbol {
            bindings = <
  &none  &kp TILDE     &kp AT  &kp HASH   &kp DLLR  &kp PRCNT                  &kp CARET   &kp AMPS  &kp LBKT  &kp RBKT   &kp SEMI  &none
  &none   &kp EXCL  &kp EQUAL  &kp STAR  &kp MINUS   &kp PLUS                   &kp PIPE  &kp UNDER  &kp LBRC  &kp RBRC  &kp COLON  &none
  &none  &kp GRAVE   &kp LPAR  &kp RPAR   &kp FSLH   &kp BSLH   &none   &none     &trans    &kp DQT    &kp LT    &kp GT  &kp QMARK  &none
                                             &none  &kp SPACE   &none   &none     &none     &none
            >;
        };

        layer_Function {
            bindings = <
  &none  &kp C_BRI_UP  &kp C_PREV    &kp C_NEXT      &kp C_PP   &none                   &kp F12  &kp F7  &kp F8  &kp F9  &kp F15  &kp F18
  &none      &kp LGUI    &kp LALT     &kp LCTRL     &kp LSHFT   &none                   &kp F11  &kp F4  &kp F5  &kp F6  &kp F14  &kp F17
  &none  &kp C_BRI_DN  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP   &none   &none   &none   &kp F10  &kp F1  &kp F2  &kp F3  &kp F13  &kp F16
                                                        &none   &none   &none   &none   &none    &none
            >;
        };

        layer_Nav {
            bindings = <
  &none      &none      &none  &key_repeat       &none   &none                     &kp ESC   &kp TAB    &kp RET    &kp DEL      &none  &none
  &none  SMT(LGUI)  SMT(LALT)   SMT(LCTRL)  SMT(LSHFT)   &none                   &kp SPACE  &kp LEFT   &kp DOWN     &kp UP  &kp RIGHT  &none
  &none      &none      &none        &none       &none   &none   &none    &none     &trans  &kp HOME  &kp PG_DN  &kp PG_UP    &kp END  &none
                                                 &none   &none   &none  &kp TAB    &kp RET     &none
            >;
        };

        layer_AppSwitch {
            bindings = <
  &none     &none        &none    &none    &none   &none                   &none     &none     &none   &none      &none   &none
  &none  &kp HOME  &kp LS(TAB)  &kp TAB  &kp END   &none                   &none     &none     &none   &none      &none   &none
  &none     &none        &none    &none    &none   &none   &none   &none   &none     &none     &none   &none      &none   &none
                                           &none  &tog 6   &none   &none   &none     &none
            >;
        };
    };
};

&sk {
    release-after-ms = <5000>;
    quick-release;
};
